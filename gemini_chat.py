import os
import google.generativeai as genai
# os.environ.get("gemini_key")
genai.configure(api_key=os.environ.get('gemini_key'))

# Create the model
generation_config = {
  "temperature": 1,
  "top_p": 0.95,
  "top_k": 64,
  "max_output_tokens": 8192,
  "response_mime_type": "text/plain",
}

model = genai.GenerativeModel(
    model_name="gemini-1.5-flash",
    generation_config=generation_config,
    # safety_settings = Adjust safety settings
    # See https://ai.google.dev/gemini-api/docs/safety-settings
    system_instruction="You are a AI assitant name JARVIS which helps to automate tasks performed on ones computer and also can help you with coding and even can chat with you. JARVIS stands for Just a rather very intelligent system. You have been devoleped by students of A I D S. when you are asked genral questions or are being chatted with speak normally but when requested sepific request as mentioned give the desired output. ",
    )

def  generate_text(prompt):
  response = model.generate_content([
  "input: Can you tell me my IP address",
  "output: func [\"get_ip_address\"]",
  "input: Is there a way to check my IP",
  "output: func [\"get_ip_address\"]",
  "input: Can you help me find my IP?",
  "output: func [\"get_ip_address\"]",
  "input: I need to know my IP address for [reason].",
  "output: func [\"get_ip_address\"]",
  "input: Could you please provide my IP address",
  "output: func [\"get_ip_address\"]",
  "input: I need to know my IP address",
  "output: func [\"get_ip_address\"]",
  "input: What's my IP",
  "output: func [\"get_ip_address\"]",
  "input: Can you tell me my IP address",
  "output: func [\"get_ip_address\"]",
  "input: Hey, what's my IP",
  "output: func [\"get_ip_address\"]",
  "input: Can you give me a heads up on my IP",
  "output: func [\"get_ip_address\"]",
  "input: What is my public IP address",
  "output: func [\"get_ip_address\"]",
  "input: Can you tell me my internal IP address",
  "output: func [\"get_ip_address\"]",
  "input: give me ip address",
  "output: func [\"get_ip_address\"]",
  "input: What time is it",
  "output: func [\"get_time\"]",
  "input: Could you please give me the time",
  "output: func [\"get_time\"]",
  "input: Can you tell me the time",
  "output: func [\"get_time\"]",
  "input: I need to know the time for [reason]",
  "output: func [\"get_time\"]",
  "input: I need to know the time",
  "output: func [\"get_time\"]",
  "input: Is there a way to find out the time",
  "output: func [\"get_time\"]",
  "input: Can you help me check the time",
  "output: func [\"get_time\"]",
  "input: Can you give me a heads up on the time",
  "output: func [\"get_time\"]",
  "input: Hey, what's the time",
  "output: func [\"get_time\"]",
  "input: What is the current time",
  "output: func [\"get_time\"]",
  "input: What date is it",
  "output: func [\"get_date\"]",
  "input: Could you please give me the date",
  "output: func [\"get_date\"]",
  "input: Can you tell me the date",
  "output: func [\"get_date\"]",
  "input: What is the date today",
  "output: func [\"get_date\"]",
  "input: I need to know the date",
  "output: func [\"get_date\"]",
  "input: I need to know the date for [reason].",
  "output: func [\"get_date\"]",
  "input: Can you help me check the date",
  "output: func [\"get_date\"]",
  "input: Is there a way to find out the date",
  "output: func [\"get_date\"]",
  "input: Hey, what's the date",
  "output: func [\"get_date\"]",
  "input: Can you give me a heads up on the date",
  "output: func [\"get_date\"]",
  "input: What is the current date",
  "output: func [\"get_date\"]",
  "input: What is the date",
  "output: func [\"get_date\"]",
  "input: What is the date and time",
  "output: func [\"get_date\",\"get_time\"]",
  "input: Can you tell me the date and time",
  "output: func [\"get_date\",\"get_time\"]",
  "input: Could you please give me the date and time",
  "output: func [\"get_date\",\"get_time\"]",
  "input: I need to know the date and time",
  "output: func [\"get_date\",\"get_time\"]",
  "input: I need to know the date and time for [reason].",
  "output: func [\"get_date\",\"get_time\"]",
  "input: Can you help me check the date and time",
  "output: func [\"get_date\",\"get_time\"]",
  "input: Is there a way to find out the date and time",
  "output: func [\"get_date\",\"get_time\"]",
  "input: Hey, what's the date and time",
  "output: func [\"get_date\",\"get_time\"]",
  "input: Can you give me a heads up on the date and time",
  "output: func [\"get_date\",\"get_time\"]",
  "input: What is the current date and time",
  "output: func [\"get_date\",\"get_time\"]",
  "input: Could you please give me the temperature",
  "output: func [\"get_temp\"]",
  "input: Can you tell me the temperature",
  "output: func [\"get_temp\"]",
  "input: What is the temperature",
  "output: func [\"get_temp\"]",
  "input: Is there a way to find out the temperature",
  "output: func [\"get_temp\"]",
  "input: Can you help me check the temperature",
  "output: func [\"get_temp\"]",
  "input: I need to know the temperature",
  "output: func [\"get_temp\"]",
  "input: I need to know the temperature for [reason]",
  "output: func [\"get_temp\"]",
  "input: Hey, what's the temperature",
  "output: func [\"get_temp\"]",
  "input: Can you give me a heads up on the temperature",
  "output: func [\"get_temp\"]",
  "input: What is the current temperature",
  "output: func [\"get_temp\"]",
  "input: Let's wrap up this chat",
  "output: func [\"exit\"]",
  "input: I'd like to end this conversation",
  "output: func [\"exit\"]",
  "input: Can we exit chat mode",
  "output: func [\"exit\"]",
  "input: exit chat mode",
  "output: func [\"exit\"]",
  "input: quit chat mode",
  "output: func [\"exit\"]",
  "input: end chat mode",
  "output: func [\"exit\"]",
  "input: Would you mind if we end chat mode",
  "output: func [\"exit\"]",
  "input: exit chat",
  "output: func [\"exit\"]",
  "input: exit",
  "output: func [\"exit\"]",
  "input: stop chat mode",
  "output: func [\"exit\"]",
  "input: exit mode",
  "output: func [\"exit\"]",
  f"input: {prompt}",
  "output: ",
])
  return response.text
  
  
# print(generate_text("check my ip"))  